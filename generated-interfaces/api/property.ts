// Interface automatically generated by schemas-to-ts

import { Location } from '../components/shared/Location';
import { Media } from '../components/shared/Media';
import { PropertyCharacteristics } from '../components/shared/PropertyCharacteristics';
import { Building } from '../components/shared/Building';
import { Location_Plain } from '../components/shared/Location';
import { Media_Plain } from '../components/shared/Media';
import { PropertyCharacteristics_Plain } from '../components/shared/PropertyCharacteristics';
import { Building_Plain } from '../components/shared/Building';
import { Location_NoRelations } from '../components/shared/Location';
import { PropertyCharacteristics_NoRelations } from '../components/shared/PropertyCharacteristics';
import { Building_NoRelations } from '../components/shared/Building';
import { AdminPanelRelationPropertyModification } from '../common/AdminPanelRelationPropertyModification';

export enum PropertyStatus {
  ForSale = 'forSale',
  ForRent = 'forRent',
  OnHold = 'onHold',
  Rented = 'Rented',
  Sold = 'Sold',}
export enum PropertyType {
  SingleFamilyHome = 'singleFamilyHome',
  Condo = 'condo',
  Loft = 'loft',
  Plex = 'plex',
  Intergeneration = 'intergeneration',
  MobileHome = 'mobileHome',
  Farm = 'farm',
  Cottage = 'cottage',
  Land = 'land',}

export interface Property {
  id: number;
  attributes: {
    createdAt: Date;    updatedAt: Date;    publishedAt?: Date;    location?: Location;
    catastroId?: string;
    media?: { data: Media[] };
    characteristics?: PropertyCharacteristics;
    propertyStatus?: PropertyStatus;
    listedPrice?: number;
    registrationId: string;
    test?: string;
    propertyType?: PropertyType;
    building?: Building;
  };
}
export interface Property_Plain {
  id: number;
  createdAt: Date;  updatedAt: Date;  publishedAt?: Date;  location?: Location_Plain;
  catastroId?: string;
  media?: Media_Plain[];
  characteristics?: PropertyCharacteristics_Plain;
  propertyStatus?: PropertyStatus;
  listedPrice?: number;
  registrationId: string;
  test?: string;
  propertyType?: PropertyType;
  building?: Building_Plain;
}

export interface Property_NoRelations {
  id: number;
  createdAt: Date;  updatedAt: Date;  publishedAt?: Date;  location?: Location_NoRelations;
  catastroId?: string;
  media?: number[];
  characteristics?: PropertyCharacteristics_NoRelations;
  propertyStatus?: PropertyStatus;
  listedPrice?: number;
  registrationId: string;
  test?: string;
  propertyType?: PropertyType;
  building?: Building_NoRelations;
}

export interface Property_AdminPanelLifeCycle {
  id: number;
  createdAt: Date;  updatedAt: Date;  publishedAt?: Date;  location?: Location_Plain;
  catastroId?: string;
  media?: AdminPanelRelationPropertyModification<Media_Plain>[];
  characteristics?: PropertyCharacteristics_Plain;
  propertyStatus?: PropertyStatus;
  listedPrice?: number;
  registrationId: string;
  test?: string;
  propertyType?: PropertyType;
  building?: Building_Plain;
}
